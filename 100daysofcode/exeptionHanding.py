print()




print("===================================== Try And Except =============================")
print()





try:
    a = int(input(">> ENTER THE NUMBER OF MULTIPLICATIONS :  "))
    print()

    for i in range(1, 11):    #>>>>>'range(1,11)' 11 dey a hoise because 10 giya break korbe. 
        print(f"{a }  X  {i }    =  ", a * i)

except:
    print()

    print(">> YOU WRONG VALUE ENTERED. Please Try Again. ")


 
print()

print(">> This line is Important code for python .")  #> "Try " and "except" use kora hoy because "line error dile " jeno "line 29 " print hoy ba output show hoy   > line 'line continue korar jonno  use kora hoy'


 







print('==================================== explain with AI ===========================================')



print()

"""

View other drafts






















পাইথনে এক্সেপশন হ্যান্ডলিং হলো প্রোগ্রামে সম্ভাব্য ত্রুটিগুলোকে মোকাবেলা করার একটি পদ্ধতি। কোনো প্রোগ্রাম চলার সময় বিভিন্ন কারণে ত্রুটি ঘটতে পারে, যেমন:

ইনপুট ত্রুটি: যদি কোনো ফাংশনকে ভুল ধরনের ইনপুট দেয়া হয় (যেমন, একটি সংখ্যার পরিবর্তে টেক্সট)।
ফাইল অ্যাক্সেস ত্রুটি: যদি কোনো ফাইল খোলা না যায় বা কোনো ডেটা লেখা না যায়।
নেটওয়ার্ক ত্রুটি: যদি ইন্টারনেট সংযোগ না থাকে বা কোনো সার্ভারে অ্যাক্সেস করা না যায়।
এক্সেপশন হ্যান্ডলিং এই ধরনের ত্রুটিগুলোকে মোকাবেলা করতে সাহায্য করে। এটি প্রোগ্রামটিকে ত্রুটি ঘটার পরেও চলতে থাকতে দেয় এবং ব্যবহারকারীকে ত্রুটির ব্যাপারে জানায়।

এক্সেপশন হ্যান্ডলিংয়ের জন্য পাইথনে try এবং except কীওয়ার্ড ব্যবহার করা হয়। try ব্লকের ভিতরে কোনো কোড যদি ত্রুটি সৃষ্টি করে, তাহলে except ব্লকের কোড চালু হয়। এটি ত্রুটির ধরন নির্ধারণ করে এবং ব্যবহারকারীকে উপযুক্ত বার্তা প্রদান করতে পারে। """

#>> একটা উদাহরণ দেখা যাক:


try:
  x = int(input("একটি সংখ্যা লিখুন: "))
  y = 10 / x
except ValueError:
  print("দয়া করে একটি বৈধ সংখ্যা লিখুন!")
except ZeroDivisionError:
  print("সংখ্যাটিকে শূন্য দ্বারা ভাগ করা যায় না!")
else:
  print(f"x এর মান {x} এবং y এর মান {y}")





"""

এই কোডে, try ব্লকের ভিতরে x কে ইনপুট হিসেবে নেয়া হয় এবং y কে 10/x দিয়ে গণনা করা হয়। যদি ইনপুট একটি সংখ্যা না হয় (ValueError), তাহলে except ValueError ব্লকের কোড চালু হয় এবং ব্যবহারকারীকে একটি বার্তা দেয়া হয়। যদি x শূন্য হয় (ZeroDivisionError), তাহলে except ZeroDivisionError ব্লকের কোড চালু হয়। যদি কোনো ত্রুটি না ঘটে, তাহলে else ব্লকের কোড চালু হয় এবং x ও y এর মান প্রিন্ট করা হয়।

এইভাবে, এক্সেপশন হ্যান্ডলিং আপনার প্রোগ্রামগুলোকে আরো মজবুত এবং ব্যবহারকারী-বান্ধব করে তুলতে পারে।

আশা করি এখন আপনি এক্সেপশন হ্যান্ডলিং সম্পর্কে একটা ধারণা পেয়েছেন। যদি আর কোনো প্রশ্ন থাকে, তাহলে অবশ্যই জিজ্ঞাসা করুন!"""




















print()

